apply plugin: "com.android.model.library"

model {

    android {
        compileSdkVersion = 25
        buildToolsVersion = '25.0.2'


        defaultConfig {
            minSdkVersion.apiLevel = 9
            targetSdkVersion.apiLevel = 9
            versionCode = 1
            versionName = '1.0'
        }
        ndk {
            moduleName = "utki"
            abiFilters.addAll(['armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64']) //this is default
            ldLibs.addAll(['android', 'log'])
            cppFlags.add("-std=c++11")
            cppFlags.add("-fexceptions")
            cppFlags.add("-frtti")
            cppFlags.add("-fintegrated-as") //needed to avoid assembler error since NDK r15
        }


    }

    android.lintOptions {
        abortOnError false
    }

    android.sources {
        main {
            jni {
                exportedHeaders {
                    srcDir "../../src/"
                }
            }
        }
    }

}



//============================
//=== Copy NDK libs to AAR ===

def aarName = name

task copyNdkLibsToAAR(type: Zip) {
    baseName = aarName
    version = "\$(version)"
    extension = 'aar.in'
    destinationDir = file('..') //put resulting AAR file to upper level directory

    from zipTree("build/outputs/aar/" + aarName + "-release.aar")
    from("../../src") {
        exclude('makefile')
        exclude('soname.txt')
        into('ndkLibs/include')
    }
}

build.finalizedBy('copyNdkLibsToAAR')
