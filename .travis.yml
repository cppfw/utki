sudo: required

services:
- docker

language: cpp
dist: xenial
os: linux

git:
  autocrlf: false

addons:
  apt:
    sources:
      - sourceline: 'deb http://dl.bintray.com/igagis/ubuntu xenial main'
        key_url: 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x379CE192D401AB61'
    update: true
    packages:
    - binfmt-support
    - qemu-user-static
    - myci
  homebrew:
    update: true
    taps:
    - igagis/tap
    packages:
    - myci

matrix:
  include:
    - name: macosx
      os: osx
      compiler: clang
      osx_image: xcode11
    - name: ios
      os: osx
      compiler: clang
      osx_image: xcode11
    - name: android
      language: android
      android:
        components:
          - platform-tools
          - tools
          - build-tools-28.0.3
          - android-28
#          - sys-img-armeabi-v7a-android-22
          - extra-android-m2repository
    - name: msys2
      os: windows


env:
  global:
  # Encrypted MYCI_BINTRAY_API_KEY for publishing to bintray.
  - secure: "GWAKTHtHFHPzssJ6rBpPcGsenxpBGyTUrOXrKyMORMmIkdRQ+PBMz6itNAtAxyYorpAB7l9XBVT3IntIkQKVh3pilBmwVf38MSlzSeU0+Y20GomfnjVuZtt/1SKSZDJb1YCXCsqgoWdc2YknXbtdifWnr6fw0MetCgzEqBHFYC/EbZauTd5OZIVHAVCIpwEHkCzf6Xtf4TelT59EtylgtQeDwuIjCr5HEj8JxIrM8LrdYJG3U/wiDt1Jh9+OxDtnwNDVMJ/o4Yvw5DgXSIMQ62+VLq0Qh50cI+djIdKv77Sq7I0FS6exMEqojyV84zkK9K1xxmQysAvyeMMo+5/shm3abLVg1DxvDkuew3LObfJLU88n/3Se1C/6mX8gYRaC7haH9dDE1cuJna8JYSGYvxtaPLako+k1+3yTYM2+rUnDCuvCn1dZ2osW5o4IR1Kq+fYg5ODRHtR/YiGgFdSY5WQlbwq0t7t8TnLlUb7cdjBNUbDojZMTt7cxPS7H8KU+Jw1t1TvU30C0akR9QzoNud1Xyy3Ayz/77cENS6X/nzFY3bpaZ5yk9ICg8SIWfmeWKxI/jXIRCJwOSphpx7bshZJLc3gDp7z/FawclXDn3YrI8pMdEdh47yy4lKpLAoLcNIiru4mxUGGb7MBA9o583hyQjUIFMKgoIyDWZOcS51Y="
  # Encrypted PRORAB_GIT_ACCESS_TOKEN for publishing to git-based repos.
  - secure: "a9c0rHQ4xMd3SfxFaOcrw5ot6su3PI+x0eZUCuvYREcoRFIKCcYw+CETZuPAsZ2uT49tONTy5rafOBcCuMl/GQ5ZE5leeou6xiofj4kKv1tiJL1j8Ek1gELJ4dnXHMbpmyYIhuW7LZ1C+BellYIzLizJv+rcdEGQBkFhZPQDPV3cpxhoOctVp4fJR+bD/WOPsmU4gVi7cbc2iOBvGEe0dFch2ZK4M5X0oO75W2vXybFeAzhZdR6lA3mcyEtrVSKEpUGrvWKaMbLaGyZal3kH71Jtl8IcpzhReGb7AOPjWSomRWJHkLS/89zjLgMBe/oXCeZEjEqwOSOwxDo5gmgSxRUyUSmASUA9hi9x2DJBpt8iTdjO+cSG6FWf13KrlyUfJyCjIpVkD8sDvV15kXHr0EeK3p7o5Qj7OP06nv56CzI/ELsvBJKTLAYwiA7saKJvQ3uwmwJafvsXVgPgpdFHYDLUWw5B5DNFXcqt0mo32Cy/I/T9Sr0XWjdpoe7fw/Z4uG4SsUM17T67UnyDZ7DnYUDqcs4g3j3cbc4fR9CrSDU9f0+3AD49XrWYNGSfiL6I1EH3LsdSrTklNs27vx1h4ns8luOOCh5b16388MXp/uXikOIyhEkeYNAwVnMaapK+9p0+MOCqiZQV9ZqF+aXH+jFYVNXNVL4hf77FMGR6+So="
  - MYCI_GIT_USERNAME=igagis
  - MYCI_GIT_ACCESS_TOKEN=$PRORAB_GIT_ACCESS_TOKEN
  - PACKAGE_NAME=utki

  matrix:
  - OS_REL=xenial OS=ubuntu DOCKER_IMAGE=$OS:$OS_REL PACKAGE_TYPE=deb
  - OS_REL=bionic OS=ubuntu DOCKER_IMAGE=$OS:$OS_REL PACKAGE_TYPE=deb
  - OS_REL=stretch OS=debian DOCKER_IMAGE=$OS:$OS_REL PACKAGE_TYPE=deb
  - OS_REL=buster OS=debian DOCKER_IMAGE=$OS:$OS_REL PACKAGE_TYPE=deb
  - OS_REL=buster OS=debian DOCKER_IMAGE=i386/$OS:$OS_REL PACKAGE_TYPE=deb
  - OS_REL=stretch OS=raspbian DOCKER_IMAGE=igagis/$OS:$OS_REL PACKAGE_TYPE=deb

before_install:
- if [ "$TRAVIS_OS_NAME" == "linux" ] && [ -z "$TRAVIS_JOB_NAME" ]; then
    docker run --name ccc -v $TRAVIS_BUILD_DIR/..:/build -w /build/$(basename $TRAVIS_BUILD_DIR) -it -d $DOCKER_IMAGE bash &&
    if [ "$PACKAGE_TYPE" == "deb" ]; then
      docker exec ccc apt update &&
      docker exec ccc apt install -y dirmngr &&
      docker exec ccc bash -c "echo 'deb http://dl.bintray.com/igagis/$OS $OS_REL main' > /etc/apt/sources.list.d/igagis.list" &&
      docker exec ccc apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 379CE192D401AB61 &&
      docker exec ccc apt update &&
      docker exec ccc apt install -y devscripts equivs myci &&
      myci-deb-prepare.sh;
    fi;
  fi
- if [ "$TRAVIS_JOB_NAME" == "macosx" ]; then
    brew install prorab prorab-extra;
  fi
- if [ "$TRAVIS_JOB_NAME" == "ios" ]; then
    sudo gem install cocoapods &&
    pod repo add --silent igagis https://$MYCI_GIT_USERNAME:$MYCI_GIT_ACCESS_TOKEN@github.com/igagis/cocoapods-repo.git &&
    pod install --project-directory=xcode;
  fi
- if [ "$TRAVIS_JOB_NAME" == "msys2" ]; then
    choco upgrade --no-progress -y msys2 &&
    export msys2="/c/tools/msys64/msys2_shell.cmd -defterm -no-start -msys -here -c" &&
    $msys2 "echo -e '[igagis_msys]\\nSigLevel ^= Optional TrustAll\\nServer ^= https://dl.bintray.com/igagis/msys2/msys' ^>^> /etc/pacman.conf" &&
    $msys2 "echo -e '[igagis_mingw64]\\nSigLevel ^= Optional TrustAll\\nServer ^= https://dl.bintray.com/igagis/msys2/mingw64' ^>^> /etc/pacman.conf" &&
    $msys2 "echo -e '[igagis_mingw32]\\nSigLevel ^= Optional TrustAll\\nServer ^= https://dl.bintray.com/igagis/msys2/mingw32' ^>^> /etc/pacman.conf" &&
    $msys2 "pacman --noconfirm --ask 20 --sync --refresh --refresh --sysupgrade --sysupgrade" &&
    $msys2 "pacman --noconfirm --ask 20 --sync --refresh --refresh --sysupgrade --sysupgrade" &&
    $msys2 "pacman -Sy --noconfirm myci mingw-w64-x86_64-toolchain mingw-w64-i686-toolchain";
  fi
- export PACKAGE_VERSION=$(myci-deb-version.sh debian/changelog);


install:
- if [ "$TRAVIS_OS_NAME" == "linux" ] && [ -z "$TRAVIS_JOB_NAME" ]; then
    docker exec ccc myci-deb-install-build-deps.sh;
  fi
# Accept android SDK licenses and install android tools
- if [ "$TRAVIS_JOB_NAME" == "android" ]; then
    echo y | sdkmanager "ndk-bundle" &&
    echo y | sdkmanager "cmake;3.6.4111459";
  fi

before_script:
- if [ "$TRAVIS_JOB_NAME" == "ios" ]; then
    curl -L https://github.com/zackslash/Xcode-Proj-Adder/raw/master/bin/XcodeProjAdder -O &&
    chmod +x XcodeProjAdder &&
    (cd xcode/$PACKAGE_NAME && ../../XcodeProjAdder -XCP $PACKAGE_NAME.xcodeproj -SCSV `echo $(find ../../src -type f -name *.cpp) | sed -E -e 's/ /,/g'`)
  fi
- if [ "$TRAVIS_JOB_NAME" == "msys2" ]; then
    $msys2 "myci-apply-version.sh -v $PACKAGE_VERSION msys2/PKGBUILD.in";
  fi

script:
- if [ "$TRAVIS_OS_NAME" == "linux" ] && [ -z "$TRAVIS_JOB_NAME" ]; then
    docker exec ccc dpkg-buildpackage -us -uc;
  fi
- if [ "$TRAVIS_JOB_NAME" == "macosx" ]; then
    make;
  fi
- if [ "$TRAVIS_JOB_NAME" == "ios" ]; then
    xcodebuild -workspace xcode/$PACKAGE_NAME.xcworkspace -scheme $PACKAGE_NAME CONFIGURATION_BUILD_DIR=../build -configuration Release &&
    myci-create-zip-package.sh -h src -f LICENSE $PACKAGE_NAME-$PACKAGE_VERSION.zip;
  fi
- if [ "$TRAVIS_JOB_NAME" == "android" ]; then
    (cd android && ./gradlew build --warning-mode all) &&
    myci-apply-version.sh -v $PACKAGE_VERSION android/*.pom.in &&
    myci-apply-version.sh -v $PACKAGE_VERSION android/*.aar.in --filename-only;
  fi
# running MSYS2 script from deployment provider did not work for some reason, so we do it here if the commit is a tagged one.
- if [ "$TRAVIS_JOB_NAME" == "msys2" ]; then
    $msys2 "(cd msys2 && makepkg-mingw --syncdeps --noconfirm --skipinteg)" &&
    if [ ! -z "$TRAVIS_TAG" ]; then
      $msys2 "myci-deploy-pacman-bintray.sh -u igagis -r msys2 -p mingw64 -d igagis_mingw64 msys2/mingw-w64-x86_64-*-any.pkg.tar.xz" &&
      $msys2 "myci-deploy-pacman-bintray.sh -u igagis -r msys2 -p mingw32 -d igagis_mingw32 msys2/mingw-w64-i686-*-any.pkg.tar.xz";
    fi;
  fi


deploy:
- provider: script
  skip_cleanup: true
  on:
    tags: true
    condition: $PACKAGE_TYPE = deb && -z "$TRAVIS_JOB_NAME"
  script: myci-deploy-debian-bintray.sh -u igagis -r $OS -p $PACKAGE_NAME -c main -d $OS_REL $TRAVIS_BUILD_DIR/../*.deb
- provider: script
  skip_cleanup: true
  script: myci-deploy-maven-bintray.sh -u igagis -r android -d io/github/igagis -p $PACKAGE_NAME -v $PACKAGE_VERSION android/$PACKAGE_NAME-$PACKAGE_VERSION.aar
  on:
    tags: true
    condition: $TRAVIS_JOB_NAME = android
- provider: script
  skip_cleanup: true
  script: myci-deploy-homebrew.sh -t igagis/tap
  on:
    tags: true
    condition: $TRAVIS_JOB_NAME = macosx
- provider: script
  skip_cleanup: true
  script: myci-deploy-cocoapods.sh -r igagis -v $PACKAGE_VERSION -u igagis -b cocoapods -p $PACKAGE_NAME-$PACKAGE_VERSION.zip cocoapods/$PACKAGE_NAME.podspec.in
  on:
    tags: true
    condition: $TRAVIS_JOB_NAME = ios
