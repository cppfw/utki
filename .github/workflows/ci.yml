name: ci
on: [push, pull_request]
env:
  PACKAGE_NAME: ${{ github.event.repository.name }}
  MYCI_BINTRAY_API_KEY: ${{ secrets.MYCI_BINTRAY_API_KEY }}
  MYCI_GIT_USERNAME: igagis
  MYCI_GIT_PASSWORD: ${{ secrets.MYCI_GIT_ACCESS_TOKEN }}
jobs:
##### linux #####
  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - {os: debian, codename: buster, image_owner: , package_type: deb}
          # - {os: debian, codename: buster, image_owner: i386/, package_type: deb}
          - {os: ubuntu, codename: bionic, image_owner: , package_type: deb}
          - {os: ubuntu, codename: eoan, image_owner: , package_type: deb}
          # - {os: raspbian, codename: buster, image_owner: igagis/, package_type: deb}
    container: ${{ matrix.image_owner }}${{ matrix.os }}:${{ matrix.codename }}
    name: linux - ${{ matrix.os }}:${{ matrix.codename }}
    steps:
      - name: git clone
        uses: actions/checkout@main
      - name: add igagis deb repo
        uses: myci-actions/add-deb-repo@master
        with:
          repo: deb http://dl.bintray.com/igagis/${{ matrix.os }} ${{ matrix.codename }} main
          repo-name: igagis
          keys: 379CE192D401AB61
      - name: install ci tools
        run: apt install --assume-yes devscripts equivs myci
      - name: prepare debian package
        run: myci-deb-prepare.sh
      - name: install deps
        run: myci-deb-install-build-deps.sh
      - name: build
        run: autojobs=true dpkg-buildpackage --unsigned-source --unsigned-changes
      - name: deploy deb packages
        run: myci-deploy-debian-bintray.sh -u igagis -r ${{ matrix.os }} -p $PACKAGE_NAME -c main -d ${{ matrix.codename }} ../*.deb
        if: matrix.package_type == 'deb' && startsWith(github.ref, 'refs/tags/')
##### macosx #####
  macosx:
    runs-on: macos-latest
    steps:
    - name: git clone
      uses: actions/checkout@main
    - name: add igagis tap
      run: brew tap igagis/tap && brew update
    - name: install ci tools
      run: brew install myci
    - name: install deps
      run: myci-brew-install.sh `myci-list-deps-homebrew.sh`
    - name: build
      run: make autojobs=true
    - name: test
      run: make test autojobs=true
    - name: deploy
      run: myci-deploy-homebrew.sh -t igagis/tap
      if: startsWith(github.ref, 'refs/tags/')
##### ios #####
  ios:
    runs-on: macos-latest
    steps:
    - name: add igagis tap
      run: brew tap igagis/tap && brew update
    - name: install ci tools
      run: brew install myci
    - name: git clone
      uses: actions/checkout@main
    - name: set PACKAGE_VERSION
      uses: myci-actions/export-env-var@master
      with: {name: PACKAGE_VERSION, value: $(myci-deb-version.sh debian/changelog)}
    - name: add cocoapods repo
      run: pod repo add --silent igagis https://$MYCI_GIT_USERNAME@github.com/igagis/cocoapods-repo.git
    - name: install deps
      run: pod install --project-directory=xcode
    - name: add sources to xcode project
      run: |
        curl -L https://github.com/zackslash/Xcode-Proj-Adder/raw/master/bin/XcodeProjAdder -O
        chmod +x XcodeProjAdder
        (cd xcode/$PACKAGE_NAME && ../../XcodeProjAdder -XCP $PACKAGE_NAME.xcodeproj -SCSV `echo $(find ../../src -type f -name *.cpp) | sed -E -e 's/ /,/g'`)
    - name: build
      run: xcodebuild -workspace xcode/$PACKAGE_NAME.xcworkspace -scheme $PACKAGE_NAME CONFIGURATION_BUILD_DIR=../build -configuration Release
    - name: create package
      run: myci-create-zip-package.sh -h src -f xcode/build/lib$PACKAGE_NAME.a///lib/ios -f LICENSE $PACKAGE_NAME-$PACKAGE_VERSION.zip
    - name: deploy
      run: myci-deploy-cocoapods.sh -r igagis -v $PACKAGE_VERSION -u igagis -b cocoapods -p $PACKAGE_NAME-$PACKAGE_VERSION.zip cocoapods/$PACKAGE_NAME.podspec.in
      if: startsWith(github.ref, 'refs/tags/')
##### android #####
  android:
    runs-on: ubuntu-latest
    container: mingc/android-build-box:latest
    steps:
    - name: git clone
      uses: actions/checkout@main
    - name: add igagis deb repo
      uses: myci-actions/add-deb-repo@master
      with:
        repo: deb http://dl.bintray.com/igagis/$(lsb_release --id --short | tr '[:upper:]' '[:lower:]') $(lsb_release --codename --short) main
        repo-name: igagis
        keys: 379CE192D401AB61
    - name: install ci tools
      run: apt install --assume-yes myci
    - name: set PACKAGE_VERSION
      uses: myci-actions/export-env-var@master
      with: {name: PACKAGE_VERSION, value: $(myci-deb-version.sh debian/changelog)}
    - name: build
      run: |
        (cd android && ./gradlew copy_aar --warning-mode all)
        myci-apply-version.sh -v $PACKAGE_VERSION android/*.pom.in
        myci-apply-version.sh -v $PACKAGE_VERSION android/*.aar.in --filename-only
    - name: deploy
      run: myci-deploy-maven-bintray.sh -u igagis -r android -d io/github/igagis -p $PACKAGE_NAME -v $PACKAGE_VERSION android/$PACKAGE_NAME-$PACKAGE_VERSION.aar
      if: startsWith(github.ref, 'refs/tags/')
##### msys2 #####
  msys2:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        include:
          - {arch: i686, repo: mingw32}
          - {arch: x86_64, repo: mingw64}
    name: msys2 - ${{ matrix.repo }}
    steps:
    - name: switch git-bash shell to msys2 shell by adding msys2 path to PATH front
      run: echo "C:\msys64\usr\bin" >> $GITHUB_PATH
      shell: bash
    - name: git clone
      uses: actions/checkout@main
    - name: add igagis pacman msys repo
      uses: myci-actions/add-pacman-repo@master
      with: {name: igagis_msys, url: 'https://dl.bintray.com/igagis/msys2/msys'}
    - name: add igagis pacman ${{ matrix.repo }} repo
      uses: myci-actions/add-pacman-repo@master
      with: {name: 'igagis_${{ matrix.repo }}', url: 'https://dl.bintray.com/igagis/msys2/${{ matrix.repo }}'}
    - name: install ci tools
      run: pacman -Sy --noconfirm myci msys2-devel mingw-w64-${{ matrix.arch }}-toolchain
    - name: prepare pacman package
      run: myci-apply-version.sh -v $(myci-deb-version.sh debian/changelog) msys2/PKGBUILD.in
    - name: build
      # to make makepkg-mingw build only one architecture we need to set the MINGW_INSTALLS
      env: {MINGW_INSTALLS: '${{ matrix.repo }}'}
      run: (cd msys2 && PKGEXT='.pkg.tar.xz' autojobs=true makepkg-mingw --syncdeps --noconfirm --skipinteg)
    - name: deploy
      run: |
        for f in $(find msys2 -name "mingw-w64-${{ matrix.arch }}-$PACKAGE_NAME-*-any.pkg.*"); do
          myci-deploy-pacman-bintray.sh -u igagis -r msys2 -p ${{ matrix.repo }} -d igagis_${{ matrix.repo }} $f
        done
      if: startsWith(github.ref, 'refs/tags/')
##### msvs #####
  msvs:
    runs-on: windows-latest
    defaults:
      run:
        shell: powershell
    steps:
    - name: git clone
      uses: actions/checkout@main
    - name: install CoAPP tools
      uses: myci-actions/install-coapp-tools@master
    - name: nuget update
      run: |
        nuget restore msvs_solution/msvs_solution.sln
        nuget update msvs_solution/msvs_solution.sln
    - name: add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
    - name: build
      run: .\nuget\build_nuget.ps1
    - name: deploy
      uses: myci-actions/publish-nuget@master
      with:
        filename: '.\nuget\*.nupkg'
        api-key: ${{ secrets.NUGET_DOT_ORG_API_KEY }}
      if: startsWith(github.ref, 'refs/tags/')
