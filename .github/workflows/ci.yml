name: ci
on: [push, pull_request]
jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - {os: debian, os_rel: buster, image_owner: , package_type: deb}
          - {os: debian, os_rel: buster, image_owner: i386/, package_type: deb}
          - {os: ubuntu, os_rel: bionic, image_owner: , package_type: deb}
          - {os: ubuntu, os_rel: eoan, image_owner: , package_type: deb}
          - {os: raspbian, os_rel: buster, image_owner: igagis/, package_type: deb}
    container: ${{ matrix.image_owner }}${{ matrix.os }}:${{ matrix.os_rel }}
    steps:
      - name: git clone
        uses: actions/checkout@main
      - name: add igagis deb repo
        uses: myci-actions/add-deb-repo@2
        with:
          repo: deb http://dl.bintray.com/igagis/debian buster main
          repo-name: igagis
          keys: 379CE192D401AB61
      - name: install ci tools
        run: apt install --assume-yes devscripts equivs myci
      - name: prepare debian package
        run: myci-deb-prepare.sh
      - name: install deps
        run: myci-deb-install-build-deps.sh
      - name: build
        run: autojobs=true dpkg-buildpackage -us -uc
  macosx:
    runs-on: macos-latest
    steps:
    - name: git clone
      uses: actions/checkout@main
    - name: add igagis tap
      run: brew tap igagis/tap && brew update
    - name: install ci tools
      run: brew install myci
    - name: install deps
      run: myci-brew-install.sh `myci-list-deps-homebrew.sh`
    - name: build
      run: make autojobs=true
    - name: test
      run: make test autojobs=true
  windows-msys2:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    env:
      msys2: c:\msys64\msys2_shell.cmd -defterm -no-start -msys -here -c
    steps:
    - name: git clone
      uses: actions/checkout@main
    - name: add igagis pacman repo
      run: |
        $msys2 "echo -e '[igagis_msys]\\nSigLevel = Optional TrustAll\\nServer = https://dl.bintray.com/igagis/msys2/msys' >> /etc/pacman.conf" &&
        $msys2 "echo -e '[igagis_mingw64]\\nSigLevel = Optional TrustAll\\nServer = https://dl.bintray.com/igagis/msys2/mingw64' >> /etc/pacman.conf" &&
        $msys2 "echo -e '[igagis_mingw32]\\nSigLevel = Optional TrustAll\\nServer = https://dl.bintray.com/igagis/msys2/mingw32' >> /etc/pacman.conf"
    - name: install ci tools
      run: $msys2 "pacman -Sy --noconfirm myci msys2-devel mingw-w64-x86_64-toolchain mingw-w64-i686-toolchain"
    - name: prepare pacman package
      run: $msys2 "myci-apply-version.sh -v \$(myci-deb-version.sh debian/changelog) msys2/PKGBUILD.in";
    - name: build
      run: $msys2 "(cd msys2 && PKGEXT='.pkg.tar.xz' autojobs=true makepkg-mingw --syncdeps --noconfirm --skipinteg)"
  windows-msvs:
    runs-on: windows-latest
    defaults:
      run:
        shell: powershell
    steps:
    - name: git clone
      uses: actions/checkout@main
    - name: download CoAPP tools installer
      run: (new-object net.webclient).DownloadFile('http://coapp.org/files/CoApp.Tools.Powershell.msi', 'C:\CoApp.Tools.Powershell.msi')
    - name: install CoAPP tools
      run: Start-Process -FilePath msiexec -ArgumentList /i, 'C:\CoApp.Tools.Powershell.msi', /quiet -Wait
    - name: add CoAPP path to module lookup paths
      uses: myci-actions/append-to-path-powershell@master
      with:
        path: C:\Program Files (x86)\Outercurve Foundation\Modules
        env-var: PSModulePath
    - name: import CoAPP module
      run: Import-Module CoApp
    - name: nuget update
      run: |
        nuget restore msvs_solution/msvs_solution.sln
        nuget update msvs_solution/msvs_solution.sln
    - name: add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
    - name: build
      run: .\nuget\build_nuget.ps1
