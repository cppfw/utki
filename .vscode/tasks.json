{
    "version": "2.0.0",
    "tasks": [
		{
			"label": "format",
			"type": "shell",
			"command": "make apply-format",
			"problemMatcher": [],
			"group": "build"
		},
		{
			"label": "test_",
			"type": "shell",
			"command": "make test",
			"dependsOn": "build",
			"problemMatcher": [],
			"group": "build"
		},
		{
			"label": "test-dev",
			"type": "shell",
			"command": "make test config=dev",
			"dependsOn": "build-dev",
			"problemMatcher": [],
			"group": "build"
		},
		{
			"label": "test_gcov",
			"type": "shell",
			"command": "make test config=gcov",
			"dependsOn": "build-dev",
			"problemMatcher": [],
			"group": "build"
		},
		{
			"label": "test_tree",
			"type": "shell",
			"command": "make --directory tests/tree test",
			"problemMatcher": [
				"$gcc"
			],
			"dependsOn": "build",
			"group": "build"
		},
		{
			"label": "test_singleton_over_shared_library",
			"type": "shell",
			"command": "make --directory tests/singleton_over_shared_library test",
			"problemMatcher": [
				"$gcc"
			],
			"dependsOn": "build",
			"group": "build"
		},
		{
			"label": "clean-all",
			"type": "shell",
			"command": "make clean-all",
			"problemMatcher": [],
			"group": "build"
		},
		{
			"label": "clean",
			"type": "shell",
			"command": "make clean",
			"problemMatcher": [],
			"group": "build"
		},
		{
			"label": "clean-dev",
			"type": "shell",
			"command": "make clean config=dev",
			"problemMatcher": [],
			"group": "build"
		},
		{
			"label": "build",
			"type": "shell",
			"command": "make",
			"args": [],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "build-clang",
			"type": "shell",
			"command": "CXX=clang++ make",
			"args": [],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "build-dev",
			"type": "shell",
			"command": "make config=dev",
			"args": [],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "build_asan",
			"type": "shell",
			"command": "make config=asan",
			"args": [],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		}
	]
}